{"ast":null,"code":"import _slicedToArray from\"/Users/khevinjugessur/Downloads/chess-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState,useCallback}from\"react\";import Container from\"@mui/material/Container\";import Game from\"./Game\";import InitGame from\"./InitGame\";import CustomDialog from\"./components/CustomDialog\";import socket from\"./socket\";import{TextField}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),usernameSubmitted=_useState4[0],setUsernameSubmitted=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),room=_useState6[0],setRoom=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),orientation=_useState8[0],setOrientation=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),players=_useState10[0],setPlayers=_useState10[1];// resets the states responsible for initializing a game\nvar cleanup=useCallback(function(){setRoom(\"\");setOrientation(\"\");setPlayers(\"\");},[]);useEffect(function(){// const username = prompt(\"Username\");\n// setUsername(username);\n// socket.emit(\"username\", username);\nsocket.on(\"opponentJoined\",function(roomData){console.log(\"roomData\",roomData);setPlayers(roomData.players);});},[]);return/*#__PURE__*/_jsxs(Container,{sx:{margin:\" 12.5% 29.5% \"},children:[/*#__PURE__*/_jsx(CustomDialog,{open:!usernameSubmitted,handleClose:function handleClose(){return setUsernameSubmitted(true);},title:\"Pick a username\",contentText:\"Please select a username\",handleContinue:function handleContinue(){if(!username)return;socket.emit(\"username\",username);setUsernameSubmitted(true);},children:/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"username\",label:\"Username\",name:\"username\",value:username,required:true,onChange:function onChange(e){return setUsername(e.target.value);},type:\"text\",fullWidth:true,variant:\"standard\"})}),room?/*#__PURE__*/_jsx(Game,{room:room,orientation:orientation,username:username,players:players// the cleanup function will be used by Game to reset the state when a game is over\n,cleanup:cleanup}):/*#__PURE__*/_jsx(InitGame,{setRoom:setRoom,setOrientation:setOrientation,setPlayers:setPlayers})]});}","map":{"version":3,"names":["useEffect","useState","useCallback","Container","Game","InitGame","CustomDialog","socket","TextField","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","usernameSubmitted","setUsernameSubmitted","_useState5","_useState6","room","setRoom","_useState7","_useState8","orientation","setOrientation","_useState9","_useState10","players","setPlayers","cleanup","on","roomData","console","log","sx","margin","children","open","handleClose","title","contentText","handleContinue","emit","autoFocus","id","label","name","value","required","onChange","e","target","type","fullWidth","variant"],"sources":["/Users/khevinjugessur/Downloads/chess-app/client/src/App.js"],"sourcesContent":["\nimport { useEffect, useState, useCallback } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Game from \"./Game\";\nimport InitGame from \"./InitGame\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport socket from \"./socket\";\nimport { TextField } from \"@mui/material\";\n\nexport default function App() {\n  const [username, setUsername] = useState(\"\");\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n\n  const [room, setRoom] = useState(\"\");\n  const [orientation, setOrientation] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n\n  // resets the states responsible for initializing a game\n  const cleanup = useCallback(() => {\n    setRoom(\"\");\n    setOrientation(\"\");\n    setPlayers(\"\");\n  }, []);\n\n  useEffect(() => {\n    // const username = prompt(\"Username\");\n    // setUsername(username);\n    // socket.emit(\"username\", username);\n\n    socket.on(\"opponentJoined\", (roomData) => {\n      console.log(\"roomData\", roomData)\n      setPlayers(roomData.players);\n    });\n  }, []);\n\n  return (\n    <Container sx={{ margin : \" 12.5% 29.5% \"  }}>\n      <CustomDialog\n        open={!usernameSubmitted}\n        handleClose={() => setUsernameSubmitted(true)}\n        title=\"Pick a username\"\n        contentText=\"Please select a username\"\n        handleContinue={() => {\n          if (!username) return;\n          socket.emit(\"username\", username);\n          setUsernameSubmitted(true);\n        }}\n      >\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          value={username}\n          required\n          onChange={(e) => setUsername(e.target.value)}\n          type=\"text\"\n          fullWidth\n          variant=\"standard\"\n        />\n      </CustomDialog>\n      {room ? (\n        <Game\n          room={room}\n          orientation={orientation}\n          username={username}\n          players={players}\n          // the cleanup function will be used by Game to reset the state when a game is over\n          cleanup={cleanup}\n        />\n      ) : (\n        <InitGame\n          setRoom={setRoom}\n          setOrientation={setOrientation}\n          setPlayers={setPlayers}\n        />\n      )}\n    </Container>\n  );\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}