{"ast":null,"code":"import _slicedToArray from\"/Users/khevinjugessur/Downloads/chess-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useMemo,useCallback,useEffect}from\"react\";import{Chessboard}from\"react-chessboard\";import{Chess}from\"chess.js\";import CustomDialog from\"./components/CustomDialog\";import sound from'./chess_move_sound.mp3';import blunder from'./chess_blunder.m4a';import socket from\"./socket\";import{Card,CardContent,List,ListItem,ListItemText,ListSubheader,Stack,Typography,Box}from\"@mui/material\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Game(_ref){var players=_ref.players,room=_ref.room,orientation=_ref.orientation,cleanup=_ref.cleanup;var chess=useMemo(function(){return new Chess();},[]);// <- 1\nvar _useState=useState(chess.fen()),_useState2=_slicedToArray(_useState,2),fen=_useState2[0],setFen=_useState2[1];// <- 2\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),over=_useState4[0],setOver=_useState4[1];var makeAMove=useCallback(function(move){try{var result=chess.move(move);// update Chess instance\nsetFen(chess.fen());// update fen state to trigger a re-render\nconsole.log(\"over, checkmate\",chess.isGameOver(),chess.isCheckmate());if(chess.inCheck())if(chess.isGameOver()){// check if move led to \"game over\"\nif(chess.isCheckmate()){// if reason for game over is a checkmate\n// Set message to checkmate. \nsetOver(\"Checkmate! \".concat(chess.turn()===\"w\"?\"black\":\"white\",\" wins!\"));// The winner is determined by checking which side made the last move\n}else if(chess.isDraw()){// if it is a draw\nsetOver(\"Draw\");// set message to \"Draw\"\n}else{setOver(\"Game over\");}}return result;}catch(e){return null;}// null if the move was illegal, the move object if the move was legal\n},[chess]);function onDrop(sourceSquare,targetSquare){// orientation is either 'white' or 'black'. game.turn() returns 'w' or 'b'\nif(chess.turn()!==orientation[0])return false;// <- 1 prohibit player from moving piece of other player\nif(players.length<2)return false;// <- 2 disallow a move if the opponent has not joined\nvar moveData={from:sourceSquare,to:targetSquare,color:chess.turn(),promotion:\"q\"// promote to queen where possible\n};var audio=new Audio(sound);var blundr=new Audio(blunder);var move=makeAMove(moveData);// illegal move\nif(move===null){blundr.play();return false;}if(move!==null)audio.play();socket.emit(\"move\",{// <- 3 emit a move event.\nmove:move,room:room});// this event will be transmitted to the opponent via the server\nreturn true;}useEffect(function(){socket.on(\"move\",function(move){makeAMove(move);//\n});},[makeAMove]);useEffect(function(){socket.on('playerDisconnected',function(player){setOver(\"\".concat(player.username,\" has disconnected\"));// set game over\n});},[]);// Game component returned jsx\nreturn/*#__PURE__*/_jsxs(Stack,{children:[/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[\"Room ID: \",room]})})}),/*#__PURE__*/_jsxs(Stack,{flexDirection:\"row\",sx:{pt:2},children:[/*#__PURE__*/_jsx(\"div\",{className:\"board\",style:{maxWidth:600,maxHeight:600,flexGrow:1},children:/*#__PURE__*/_jsx(Chessboard,{position:fen,onPieceDrop:onDrop,boardOrientation:orientation,customDarkSquareStyle:{backgroundColor:'#2c4573'}})}),players.length>0&&/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(ListSubheader,{children:\"Players\"}),players.map(function(p){return/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:p.username})},p.id);})]})})]}),/*#__PURE__*/_jsx(CustomDialog// Game Over CustomDialog\n,{open:Boolean(over),title:over,contentText:over,handleContinue:function handleContinue(){socket.emit(\"closeRoom\",{roomId:room});cleanup();}})]});}export default Game;","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","Chessboard","Chess","CustomDialog","sound","blunder","socket","Card","CardContent","List","ListItem","ListItemText","ListSubheader","Stack","Typography","Box","jsxs","_jsxs","jsx","_jsx","Game","_ref","players","room","orientation","cleanup","chess","_useState","fen","_useState2","_slicedToArray","setFen","_useState3","_useState4","over","setOver","makeAMove","move","result","console","log","isGameOver","isCheckmate","inCheck","concat","turn","isDraw","e","onDrop","sourceSquare","targetSquare","length","moveData","from","to","color","promotion","audio","Audio","blundr","play","emit","on","player","username","children","variant","flexDirection","sx","pt","className","style","maxWidth","maxHeight","flexGrow","position","onPieceDrop","boardOrientation","customDarkSquareStyle","backgroundColor","map","p","primary","id","open","Boolean","title","contentText","handleContinue","roomId"],"sources":["/Users/khevinjugessur/Downloads/chess-app/client/src/Game.jsx"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport sound from './chess_move_sound.mp3';\nimport blunder from './chess_blunder.m4a';\nimport socket from \"./socket\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Stack,\n  Typography,\n  Box,\n} from \"@mui/material\";\n\nfunction Game({ players, room, orientation, cleanup }) {\n  const chess = useMemo(() => new Chess(), []); // <- 1\n  const [fen, setFen] = useState(chess.fen()); // <- 2\n  const [over, setOver] = useState(\"\");\n\n\n  const makeAMove = useCallback(\n    (move) => {\n      try {\n        const result = chess.move(move); // update Chess instance\n        setFen(chess.fen()); // update fen state to trigger a re-render\n  \n        console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n        if(chess.inCheck()) \n  \n        if (chess.isGameOver()) { // check if move led to \"game over\"\n          if (chess.isCheckmate()) { // if reason for game over is a checkmate\n            // Set message to checkmate. \n            setOver(\n              `Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`\n            ); \n            // The winner is determined by checking which side made the last move\n          } else if (chess.isDraw()) { // if it is a draw\n            setOver(\"Draw\"); // set message to \"Draw\"\n          } else {\n            setOver(\"Game over\");\n          }\n        }\n  \n        return result;\n      } catch (e) {\n        \n        return null;\n      } // null if the move was illegal, the move object if the move was legal\n\n    },\n    [chess]\n  );\n\n\n  function onDrop(sourceSquare, targetSquare) {\n    // orientation is either 'white' or 'black'. game.turn() returns 'w' or 'b'\n    if (chess.turn() !== orientation[0]) return false; // <- 1 prohibit player from moving piece of other player\n\n    if (players.length < 2) return false; // <- 2 disallow a move if the opponent has not joined\n\n    const moveData = {\n      from: sourceSquare,\n      to: targetSquare,\n      color: chess.turn(),\n      promotion: \"q\", // promote to queen where possible\n    };\n\n    const audio = new Audio(sound);\n    const blundr = new Audio(blunder);\n\n    const move = makeAMove(moveData);\n\n    // illegal move\n    if (move === null){\n      blundr.play();\n      return false;\n    } \n    if(move !== null) audio.play();\n\n    socket.emit(\"move\", { // <- 3 emit a move event.\n      move,\n      room,\n    }); // this event will be transmitted to the opponent via the server\n\n    return true;\n  }\n  \n  useEffect(() => {\n    socket.on(\"move\", (move) => {\n      makeAMove(move); //\n    });\n  }, [makeAMove]);\n  \n  useEffect(() => {\n    socket.on('playerDisconnected', (player) => {\n      setOver(`${player.username} has disconnected`); // set game over\n    });\n  }, []);\n  // Game component returned jsx\n\n  return (\n    <Stack>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\">Room ID: {room}</Typography>\n        </CardContent>\n      </Card>\n      <Stack flexDirection=\"row\" sx={{ pt: 2 }}>\n        <div className=\"board\" style={{\n          maxWidth: 600,\n          maxHeight: 600,\n          flexGrow: 1,\n        }}>\n          <Chessboard\n            position={fen}\n            onPieceDrop={onDrop}\n            boardOrientation={orientation}\n            customDarkSquareStyle={{backgroundColor: '#2c4573'}}\n          />\n        </div>\n        {players.length > 0 && (\n          <Box>\n            <List>\n              <ListSubheader>Players</ListSubheader>\n              {players.map((p) => (\n                <ListItem key={p.id}>\n                  <ListItemText primary={p.username} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n      </Stack>\n      \n      <CustomDialog // Game Over CustomDialog\n        open={Boolean(over)}\n        title={over}\n        contentText={over}\n        handleContinue={() => {\n          socket.emit(\"closeRoom\", { roomId: room });\n          cleanup();\n        }}\n      />\n    </Stack>\n  );\n\n  \n\n}\n\n\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}