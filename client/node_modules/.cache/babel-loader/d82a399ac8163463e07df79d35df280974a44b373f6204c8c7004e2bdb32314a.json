{"ast":null,"code":"var _jsxFileName = \"/Users/khevinjugessur/Downloads/multiplayer-chess/client/src/Game.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport sound from './chess_move_sound.mp3';\nimport blunder from './chess_blunder.m4a';\nimport socket from \"./socket\";\nimport { Card, CardContent, List, ListItem, ListItemText, ListSubheader, Stack, Typography, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players,\n  room,\n  orientation,\n  cleanup\n}) {\n  _s();\n  const chess = useMemo(() => new Chess(), []); // <- 1\n  const [fen, setFen] = useState(chess.fen()); // <- 2\n  const [over, setOver] = useState(\"\");\n  const makeAMove = useCallback(move => {\n    try {\n      const result = chess.move(move); // update Chess instance\n      setFen(chess.fen()); // update fen state to trigger a re-render\n\n      console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n      if (chess.inCheck()) if (chess.isGameOver()) {\n        // check if move led to \"game over\"\n        if (chess.isCheckmate()) {\n          // if reason for game over is a checkmate\n          // Set message to checkmate. \n          setOver(`Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`);\n          // The winner is determined by checking which side made the last move\n        } else if (chess.isDraw()) {\n          // if it is a draw\n          setOver(\"Draw\"); // set message to \"Draw\"\n        } else {\n          setOver(\"Game over\");\n        }\n      }\n      return result;\n    } catch (e) {\n      return null;\n    } // null if the move was illegal, the move object if the move was legal\n  }, [chess]);\n  function onDrop(sourceSquare, targetSquare) {\n    // orientation is either 'white' or 'black'. game.turn() returns 'w' or 'b'\n    if (chess.turn() !== orientation[0]) return false; // <- 1 prohibit player from moving piece of other player\n\n    if (players.length < 2) return false; // <- 2 disallow a move if the opponent has not joined\n\n    const moveData = {\n      from: sourceSquare,\n      to: targetSquare,\n      color: chess.turn(),\n      promotion: \"q\" // promote to queen where possible\n    };\n\n    const audio = new Audio(sound);\n    const blundr = new Audio(blunder);\n    const move = makeAMove(moveData);\n\n    // illegal move\n    if (move === null) {\n      blundr.play();\n      return false;\n    }\n    if (move !== null) audio.play();\n    socket.emit(\"move\", {\n      // <- 3 emit a move event.\n      move,\n      room\n    }); // this event will be transmitted to the opponent via the server\n\n    return true;\n  }\n  useEffect(() => {\n    socket.on(\"move\", move => {\n      makeAMove(move); //\n    });\n  }, [makeAMove]);\n  useEffect(() => {\n    socket.on('playerDisconnected', player => {\n      setOver(`${player.username} has disconnected`); // set game over\n    });\n  }, []);\n  // Game component returned jsx\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Room ID: \", room]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      flexDirection: \"row\",\n      sx: {\n        pt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        style: {\n          maxWidth: 600,\n          maxHeight: 600,\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Chessboard, {\n          position: fen,\n          onPieceDrop: onDrop,\n          boardOrientation: orientation,\n          customDarkSquareStyle: {\n            backgroundColor: '#2c4573'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), players.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), players.map(p => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: p.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog // Game Over CustomDialog\n    , {\n      open: Boolean(over),\n      title: over,\n      contentText: over,\n      handleContinue: () => {\n        socket.emit(\"closeRoom\", {\n          roomId: room\n        });\n        cleanup();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"ZsRxyzpkkuHcTrv6M5eew4Ku9bY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","Chessboard","Chess","CustomDialog","sound","blunder","socket","Card","CardContent","List","ListItem","ListItemText","ListSubheader","Stack","Typography","Box","jsxDEV","_jsxDEV","Game","players","room","orientation","cleanup","_s","chess","fen","setFen","over","setOver","makeAMove","move","result","console","log","isGameOver","isCheckmate","inCheck","turn","isDraw","e","onDrop","sourceSquare","targetSquare","length","moveData","from","to","color","promotion","audio","Audio","blundr","play","emit","on","player","username","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","sx","pt","className","style","maxWidth","maxHeight","flexGrow","position","onPieceDrop","boardOrientation","customDarkSquareStyle","backgroundColor","map","p","primary","id","open","Boolean","title","contentText","handleContinue","roomId","_c","$RefreshReg$"],"sources":["/Users/khevinjugessur/Downloads/multiplayer-chess/client/src/Game.jsx"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport sound from './chess_move_sound.mp3';\nimport blunder from './chess_blunder.m4a';\nimport socket from \"./socket\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Stack,\n  Typography,\n  Box,\n} from \"@mui/material\";\n\nfunction Game({ players, room, orientation, cleanup }) {\n  const chess = useMemo(() => new Chess(), []); // <- 1\n  const [fen, setFen] = useState(chess.fen()); // <- 2\n  const [over, setOver] = useState(\"\");\n\n\n  const makeAMove = useCallback(\n    (move) => {\n      try {\n        const result = chess.move(move); // update Chess instance\n        setFen(chess.fen()); // update fen state to trigger a re-render\n  \n        console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n        if(chess.inCheck()) \n  \n        if (chess.isGameOver()) { // check if move led to \"game over\"\n          if (chess.isCheckmate()) { // if reason for game over is a checkmate\n            // Set message to checkmate. \n            setOver(\n              `Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`\n            ); \n            // The winner is determined by checking which side made the last move\n          } else if (chess.isDraw()) { // if it is a draw\n            setOver(\"Draw\"); // set message to \"Draw\"\n          } else {\n            setOver(\"Game over\");\n          }\n        }\n  \n        return result;\n      } catch (e) {\n        \n        return null;\n      } // null if the move was illegal, the move object if the move was legal\n\n    },\n    [chess]\n  );\n\n\n  function onDrop(sourceSquare, targetSquare) {\n    // orientation is either 'white' or 'black'. game.turn() returns 'w' or 'b'\n    if (chess.turn() !== orientation[0]) return false; // <- 1 prohibit player from moving piece of other player\n\n    if (players.length < 2) return false; // <- 2 disallow a move if the opponent has not joined\n\n    const moveData = {\n      from: sourceSquare,\n      to: targetSquare,\n      color: chess.turn(),\n      promotion: \"q\", // promote to queen where possible\n    };\n\n    const audio = new Audio(sound);\n    const blundr = new Audio(blunder);\n\n    const move = makeAMove(moveData);\n\n    // illegal move\n    if (move === null){\n      blundr.play();\n      return false;\n    } \n    if(move !== null) audio.play();\n\n    socket.emit(\"move\", { // <- 3 emit a move event.\n      move,\n      room,\n    }); // this event will be transmitted to the opponent via the server\n\n    return true;\n  }\n  \n  useEffect(() => {\n    socket.on(\"move\", (move) => {\n      makeAMove(move); //\n    });\n  }, [makeAMove]);\n  \n  useEffect(() => {\n    socket.on('playerDisconnected', (player) => {\n      setOver(`${player.username} has disconnected`); // set game over\n    });\n  }, []);\n  // Game component returned jsx\n\n  return (\n    <Stack>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\">Room ID: {room}</Typography>\n        </CardContent>\n      </Card>\n      <Stack flexDirection=\"row\" sx={{ pt: 2 }}>\n        <div className=\"board\" style={{\n          maxWidth: 600,\n          maxHeight: 600,\n          flexGrow: 1,\n        }}>\n          <Chessboard\n            position={fen}\n            onPieceDrop={onDrop}\n            boardOrientation={orientation}\n            customDarkSquareStyle={{backgroundColor: '#2c4573'}}\n          />\n        </div>\n        {players.length > 0 && (\n          <Box>\n            <List>\n              <ListSubheader>Players</ListSubheader>\n              {players.map((p) => (\n                <ListItem key={p.id}>\n                  <ListItemText primary={p.username} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n      </Stack>\n      \n      <CustomDialog // Game Over CustomDialog\n        open={Boolean(over)}\n        title={over}\n        contentText={over}\n        handleContinue={() => {\n          socket.emit(\"closeRoom\", { roomId: room });\n          cleanup();\n        }}\n      />\n    </Stack>\n  );\n\n  \n\n}\n\n\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}