{"ast":null,"code":"var _jsxFileName = \"/Users/khevinjugessur/Documents/multiplayer-chess/chess-game/src/Game.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport sound from './chess_move_sound.mp3';\nimport blunder from './chess_blunder.m4a';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players,\n  room,\n  orientation,\n  cleanup\n}) {\n  _s();\n  const chess = useMemo(() => new Chess(), []); // <- 1\n  const [fen, setFen] = useState(chess.fen()); // <- 2\n  const [over, setOver] = useState(\"\");\n  const makeAMove = useCallback(move => {\n    try {\n      const result = chess.move(move); // update Chess instance\n      setFen(chess.fen()); // update fen state to trigger a re-render\n\n      console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n      if (chess.isGameOver()) {\n        // check if move led to \"game over\"\n        if (chess.isCheckmate()) {\n          // if reason for game over is a checkmate\n          // Set message to checkmate. \n          setOver(`Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`);\n          // The winner is determined by checking which side made the last move\n        } else if (chess.isDraw()) {\n          // if it is a draw\n          setOver(\"Draw\"); // set message to \"Draw\"\n        } else {\n          setOver(\"Game over\");\n        }\n      }\n      return result;\n    } catch (e) {\n      return null;\n    } // null if the move was illegal, the move object if the move was legal\n  }, [chess]);\n\n  // onDrop function\n  function onDrop(sourceSquare, targetSquare) {\n    const moveData = {\n      from: sourceSquare,\n      to: targetSquare,\n      color: chess.turn(),\n      promotion: \"q\"\n    };\n    const audio = new Audio(sound);\n    const blunder = new Audio(blunder);\n    const move = makeAMove(moveData);\n\n    // illegal move\n    if (move === null) return false;\n    if (move !== null) audio.play();\n    return true;\n  }\n\n  // Game component returned jsx\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onPieceDrop: onDrop,\n        customDarkSquareStyle: {\n          backgroundColor: '#2c4573'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog // <- 5\n    , {\n      open: Boolean(over),\n      title: over,\n      contentText: over,\n      handleContinue: () => {\n        setOver(\"\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"b5ocUstPxAWuGUNL7RFptmYJkjA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","Chessboard","Chess","CustomDialog","sound","blunder","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","players","room","orientation","cleanup","_s","chess","fen","setFen","over","setOver","makeAMove","move","result","console","log","isGameOver","isCheckmate","turn","isDraw","e","onDrop","sourceSquare","targetSquare","moveData","from","to","color","promotion","audio","Audio","play","children","className","position","onPieceDrop","customDarkSquareStyle","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","title","contentText","handleContinue","_c","$RefreshReg$"],"sources":["/Users/khevinjugessur/Documents/multiplayer-chess/chess-game/src/Game.jsx"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport sound from './chess_move_sound.mp3'\nimport blunder from './chess_blunder.m4a'\n\nfunction Game({ players, room, orientation, cleanup }) {\n  const chess = useMemo(() => new Chess(), []); // <- 1\n  const [fen, setFen] = useState(chess.fen()); // <- 2\n  const [over, setOver] = useState(\"\");\n\n\n  const makeAMove = useCallback(\n    (move) => {\n      try {\n        const result = chess.move(move); // update Chess instance\n        setFen(chess.fen()); // update fen state to trigger a re-render\n  \n        console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n  \n        if (chess.isGameOver()) { // check if move led to \"game over\"\n          if (chess.isCheckmate()) { // if reason for game over is a checkmate\n            // Set message to checkmate. \n            setOver(\n              `Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`\n            ); \n            // The winner is determined by checking which side made the last move\n          } else if (chess.isDraw()) { // if it is a draw\n            setOver(\"Draw\"); // set message to \"Draw\"\n          } else {\n            setOver(\"Game over\");\n          }\n        }\n  \n        return result;\n      } catch (e) {\n        return null;\n      } // null if the move was illegal, the move object if the move was legal\n\n    },\n    [chess]\n  );\n\n\n  // onDrop function\n  function onDrop(sourceSquare, targetSquare) {\n    const moveData = {\n      from: sourceSquare,\n      to: targetSquare,\n      color: chess.turn(),\n      promotion: \"q\",\n    };\n\n    const audio = new Audio(sound);\n    const blunder = new Audio(blunder)\n\n    const move = makeAMove(moveData);\n\n    // illegal move\n    if (move === null) return false;\n    if(move !== null) audio.play();\n\n    return true;\n  }\n\n\n  \n  \n  // Game component returned jsx\n  return (\n    <>\n      <div className=\"board\">\n        <Chessboard position={fen} onPieceDrop={onDrop} customDarkSquareStyle={{backgroundColor: '#2c4573'}} />  {/**  <- 4 */}\n      </div>\n      <CustomDialog // <- 5\n        open={Boolean(over)}\n        title={over}\n        contentText={over}\n        handleContinue={() => {\n          setOver(\"\");\n        }}\n      />\n    </>\n  );\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}